services:
  statsd-exporter_service:
    image: prom/statsd-exporter:v0.21.0
    container_name: statsd-exporter_service
    volumes:
      - C:/Users/Amayas/Downloads/ETL-SENTHELP-main/configs/statsd.yaml:/home/statsd-mapping-configs.yaml
    entrypoint: ["/bin/sh", "-c"]
    command: ["statsd_exporter --log.level=debug --statsd.mapping-config=/home/statsd-mapping-configs.yaml"]
    ports:
      - "9102:9102" # scrape port
      - "9125:9125/udp" # ingest port
    restart: always
    networks:
      - airflow_network
      
  prometheus_service:
    image: prom/prometheus:v2.26.0
    container_name: prometheus_service
    volumes:
      - C:/Users/Amayas/Downloads/ETL-SENTHELP-main/configs/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9092:9090
    restart: always

  grafana_service:
    image: grafana/grafana:6.7.2
    container_name: grafana_service
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always
    ports:
      - 3000:3000
  inference_continue_service:
    image: etl-senthelp-inference
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/usr/local/airflow/
networks:
  airflow_network:
    external: false

# Names our volume
volumes:
  prometheus_data:
  grafana_data:



